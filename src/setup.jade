ul.list
    li(ng-click='toggle("li.login")') 帐号设置
    li(ng-click='toggle("li.config")') 下载设置
    li(ng-click='toggle("li.network")') 网络设置
    li(ng-click='toggle("li.id3")') ID3设置
ul.content
    li.login(ng-controller='LoginCtrl', style='display:flex')
        h1 帐号设置
        form.caption(ng-hide='user.logged')
            h2.subhead.loginByUserData 常规登录(仅支持虾米帐号)
            label(for='email') Email
            input#email(type='email', ng-model='email', name='email')
            label(for='password', minlength=6, maxlength=16) 密码
            input#password(type='password', ng-model='password', name='password')
            div(ng-show='validateUrl')
                label(for='validateUrl') 验证码
                input#validate(type='text', ng-model='validate', name='validate')
                img(ng-src='{{ validateUrl }}')
            label(for='rememberAccount')
                input#remember(type='checkbox', ng-model='remember', name='remember')
                | 记住我
            button(ng-click='loginByUserData()') 登录
            h2.subhead.loginByWebPage 网页登录(支持淘宝帐号等第三方登录)
            button(ng-click='loginByWeb()') 网页登录
            //iframe.loginPage(nwdisable, nwfaketop, iframe-onload="loginPageLoad()")
            h2.subhead.loginByCookie 手动输入Cookie(高级)
            label(for='cookie') Cookie
            input#cookie(type='text', ng-model='cookie', name='cookie')
            button(ng-click='loginByCookie()') 登录
            //iframe.loginPage(nwfaketop, iframe-onload="loginPageLoad()")


            //| 淘宝登录(测试)
            //iframe(ng-src='{{ taobaoLoginPage }}', nwdisable, nwfaketop, iframe-onload="taobaoPageLoad()")
            //iframe(nwdisable, nwfaketop, iframe-onload="taobaoPageLoad()")
        div.caption(ng-show='user.logged')
            p 用户名: {{ user.name }}
            p(ng-show='user.isVip') VIP帐号
            p(ng-hide='user.isVip') 普通帐号
            p(ng-show='user.isMusician') 虾米音乐人
            p 等级: {{ user.level.name }}({{ user.level.num }}) {{ user.level.credit }}/{{ user.level.creditLimit }}
            p 成就: {{ user.pyramid }}星
            p 已签到{{ user.sign.num }}天
            button(ng-click='sign()', ng-hide='user.sign.hasCheck') 签到
            button(ng-click='logout()') 注销
    li.config(ng-controller='ConfigCtrl')
        h1 下载设置
        form.caption
            h2.subhead 保存路径
            //.flex-row
            input#savePath(type='text', local-forage="config.savePath", ng-model='config.savePath')
            button(ng-click='openFolderChooseDialog()', style='width: 60px').no-flex 选择
            
            h2.subhead 下载
            
            label(for='taskLimitMax') 最大同时任务数:
            input#taskLimitMax(type='number', max='10', min='1', step='1', local-forage="config.taskLimitMax", ng-model='config.taskLimitMax')

            label(for='useMonitoringClipboard')
                input#useMonitoringClipboard(type='checkbox', local-forage='config.useMonitoringClipboard', ng-model='config.useMonitoringClipboard')
                | 监控剪切板中的链接

            label(for='hasLyric')
                input#hasLyric(type='checkbox', local-forage='config.hasLyric', ng-model='config.hasLyric')
                | 同时下载歌词

            label(for='hasCover')
                input#hasCover(type='checkbox', local-forage='config.hasCover', ng-model='config.hasCover')
                | 同时下载封面

            label(for='hasId3')
                input#hasId3(type='checkbox', local-forage='config.hasId3', ng-model='config.hasId3')
                | 添加ID3V2.3信息(更多设置在ID3设置页中)
            
            h2.subhead 文件命名
            
            | 保存目录结构:
            label(for='saveDirect')
                input#saveDirect(type='radio', name='saveMode', local-forage='config.saveMode', ng-model='config.saveMode', value='direct')
                | 直接保存在根目录, 所有下载都会以单曲形式直接保存在{{ config.savePath }}根目录下.
            label(for='saveAlwaysClassification')
                input#saveAlwaysClassification(type='radio', name='saveMode', local-forage='config.saveMode', ng-model='config.saveMode', value='alwaysClassification')
                | 全部以 艺人/专辑/碟片号/歌曲 分类保存, 碟片数只有一张时会省略.
            label(for='saveSmartClassification')
                input#saveSmartClassification(type='radio', name='saveMode', local-forage='config.saveMode', ng-model='config.saveMode', value='smartClassification')
                //input#useDirectory(type='checkbox', local-forage='config.useDirectory', ng-model='config.useDirectory')
                | 智能分类, 会按以下规则以目录结构分类保存

            div.
                下载单曲时是 {{ config.filenameFormat | preview:'song' }}.mp3<br/>
                下载专辑时是 {{ config.foldernameFormat | preview:'album' }}/{{ config.filenameFormat | preview:'song' }}.mp3<br/>
                下载精选集时是 精选集名/{{ config.filenameFormat | preview:'song' }}.mp3<br/>
                下载艺人热门歌曲时是 艺人名/{{ config.filenameFormat | preview:'song' }}.mp3<br/>

            br
            
            label(for='foldernameFormat') 目录名格式(仅对目录结构的专辑下载有效)
            input#foldernameFormat(type='text', local-forage="config.foldernameFormat", ng-model='config.foldernameFormat')
            | 效果预览: {{ config.foldernameFormat | preview:'album' }}

            div.
                使用/可以构建多层目录, 比如%ARTIST%/%NAME%<br/>
                可用变量:<br/>
                %NAME% {{ '%NAME%' | preview:'album' }}<br/>
                %ARTIST% {{ '%ARTIST%' | preview:'album' }}<br/>
                %COMPANY% {{ '%COMPANY%' | preview:'album' }}<br/>
                %TIME% {{ '%TIME%' | preview:'album' }}<br/>
                %LANGUAGE% {{ '%LANGUAGE%' | preview:'album' }}<br/>
                
            br

            label(for='filenameFormat') 文件名格式:
            input#filenameFormat(type='text', local-forage="config.filenameFormat", ng-model='config.filenameFormat')
            | 效果预览: {{ config.filenameFormat | preview:'song' }}.mp3

            div.
                可用变量:<br/>
                %NAME% {{ '%NAME%' | preview:'song' }}<br/>
                %ARTIST% {{ '%ARTIST%' | preview:'song' }}<br/>
                %ALBUM% {{ '%ALBUM%' | preview:'song' }}<br/>
                %TRACK% {{ '%TRACK%' | preview:'song' }}<br/>
                %DISC% {{ '%DISC%' | preview:'song' }}<br/>
                
            br
            | 当文件已存在时的解决方案:
            label(for='alwaysCover')
                input#alwaysCover(type='radio', name='fileExistSolution', local-forage='config.fileExistSolution', ng-model='config.fileExistSolution', value='alwaysCover')
                | 总是覆盖
            label(for='alwaysSkip')
                input#alwaysSkip(type='radio', name='fileExistSolution', local-forage='config.fileExistSolution', ng-model='config.fileExistSolution', value='alwaysSkip')
                | 总是跳过
            label(for='coverSmallFile')
                input#coverSmallFile(type='radio', name='fileExistSolution', local-forage='config.fileExistSolution', ng-model='config.fileExistSolution', value='coverSmallFile')
                | 当新文件比旧文件大时覆盖
            label(for='filenameTimestamp')
                input#filenameTimestamp(type='radio', name='fileExistSolution', local-forage='config.fileExistSolution', ng-model='config.fileExistSolution', value='filenameTimestamp')
                | 为新文件的文件名添加时间戳
            
    li.network(ng-controller='NetworkCtrl')
        h1 网络设置
        form.caption
            | 代理服务器:
            label(for='useProxy')
                input#useProxy(type='radio', name='proxySelect', local-forage='config.useProxy', ng-model='config.useProxy', value='false')
                | 不使用
            label(for='notUseProxy')
                input#notUseProxy(type='radio', name='proxySelect', local-forage='config.useProxy', ng-model='config.useProxy', value='true')
                | 使用
            label(for='proxy-host') 服务器:
            input#proxy-host(type='text', local-forage='config.proxy.host', ng-model='config.proxy.host', enabled='config.useProxy === "true"') 
            label(for='proxy-port') 端口:
            input#proxy-hort(type='number', local-forage='config.proxy.port', ng-model='config.proxy.port', enabled='config.useProxy === "true"')
            label(for='proxy-username') 用户名:
            input#proxy-username(type='text', local-forage='config.proxy.username', ng-model='config.proxy.username', enabled='config.useProxy === "true"')
            label(for='proxy-password') 密码:
            input#proxy-password(type='password', local-forage='config.proxy.password', ng-model='config.proxy.password', enabled='config.useProxy === "true"')
    li.id3(ng-controller='Id3Ctrl')
        h1 ID3设置
        form.caption
            label(for='id3-hasTitle')
                input#id3-hasTitle(type='checkbox', local-forage='config.id3.hasTitle', ng-model='config.id3.hasTitle')
                | 标题 (歌名/曲名)
            label(for='id3-hasArtist')
                input#id3-hasArtist(type='checkbox', local-forage='config.id3.hasArtist', ng-model='config.id3.hasArtist')
                | 参与创作的艺术家 (主唱/演奏者)
            label(for='id3-hasAlbumArtist')
                input#id3-hasAlbumArtist(type='checkbox', local-forage='config.id3.hasAlbumArtist', ng-model='config.id3.hasAlbumArtist')
                | 唱片集艺术家 (主唱/演奏者/乐队)
            label(for='id3-hasAlbum')
                input#id3-hasAlbum(type='checkbox', local-forage='config.id3.hasAlbum', ng-model='config.id3.hasAlbum')
                | 唱片集 (专辑名)
            label(for='id3-hasYear')
                input#id3-hasYear(type='checkbox', local-forage='config.id3.hasYear', ng-model='config.id3.hasYear')
                | 年 (发行年份)
            label(for='id3-hasTrack')
                input#id3-hasTrack(type='checkbox', local-forage='config.id3.hasTrack', ng-model='config.id3.hasTrack')
                | # (音轨号)
            label(for='id3-hasGenre')
                input#id3-hasGenre(type='checkbox', local-forage='config.id3.hasGenre', ng-model='config.id3.hasGenre')
                | 流派 (风格)
            label(for='id3-hasDisc')
                input#id3-hasDisc(type='checkbox', local-forage='config.id3.hasDisc', ng-model='config.id3.hasDisc')
                | 部分设置 (碟片号)
            label(for='id3-hasLyric')
                input#id3-hasLyric(type='checkbox', local-forage='config.id3.hasLyric', ng-model='config.id3.hasLyric')
                | 歌词
            label(for='id3-hasCover')
                input#id3-hasCover(type='checkbox', local-forage='config.id3.hasCover', ng-model='config.id3.hasCover')
                | 专辑封面
            | 专辑封面尺寸:
            label(for='id3-cover-size-original')
                input#id3-cover-size-original(type='radio', name='coverSize', local-forage='config.id3.cover.size', ng-model='config.id3.cover.size', value='original')
                | 原始大小(不限制封面图片长度)
            label(for='id3-cover-size-standard')
                input#id3-cover-size-standard(type='radio', name='coverSize', local-forage='config.id3.cover.size', ng-model='config.id3.cover.size', value='standard')
                | 标准大小(最长边限制最大640像素, 按比例缩放, 与虾米客户端一致)
            label(for='id3-cover-size-custom')
                input#id3-cover-size-custom(type='radio', name='coverSize', ng-model='config.id3.cover.size', value='custom')
                | 自定义最长边长度(单位像素, 按比例缩放):
            input#coverMaxHeight(type='number', max='1000', min='10', step='10', local-forage='config.id3.cover.maxSide', ng-model='config.id3.cover.maxSide', enabled='config.id3.cover.size === "custom"')